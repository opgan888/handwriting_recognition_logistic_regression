{"$message_type":"diagnostic","message":"arguments to this function are incorrect","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"tests/test_helper.rs","byte_start":918,"byte_end":927,"line_start":33,"line_end":33,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"    let (dw, db, cost) = propagate(&w, &b, &X, &Y);","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected an array with a fixed size of 2 elements, found one with 3 elements","code":null,"level":"note","spans":[{"file_name":"tests/test_helper.rs","byte_start":928,"byte_end":930,"line_start":33,"line_end":33,"column_start":36,"column_end":38,"is_primary":true,"text":[{"text":"    let (dw, db, cost) = propagate(&w, &b, &X, &Y);","highlight_start":36,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"expected reference `&ArrayBase<OwnedRepr<f32>, Dim<[usize; 2]>>`\n   found reference `&ArrayBase<OwnedRepr<{float}>, Dim<[usize; 3]>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"expected an array with a fixed size of 2 elements, found one with 3 elements","code":null,"level":"note","spans":[{"file_name":"tests/test_helper.rs","byte_start":936,"byte_end":938,"line_start":33,"line_end":33,"column_start":44,"column_end":46,"is_primary":true,"text":[{"text":"    let (dw, db, cost) = propagate(&w, &b, &X, &Y);","highlight_start":44,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"expected reference `&ArrayBase<OwnedRepr<f32>, Dim<[usize; 2]>>`\n   found reference `&ArrayBase<OwnedRepr<{float}>, Dim<[usize; 3]>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"expected an array with a fixed size of 2 elements, found one with 3 elements","code":null,"level":"note","spans":[{"file_name":"tests/test_helper.rs","byte_start":940,"byte_end":942,"line_start":33,"line_end":33,"column_start":48,"column_end":50,"is_primary":true,"text":[{"text":"    let (dw, db, cost) = propagate(&w, &b, &X, &Y);","highlight_start":48,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"expected reference `&ArrayBase<OwnedRepr<f32>, Dim<[usize; 2]>>`\n   found reference `&ArrayBase<OwnedRepr<{float}>, Dim<[usize; 3]>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"/workspaces/handwriting_recognition_logistic_regression/src/helper.rs","byte_start":1071,"byte_end":1080,"line_start":43,"line_end":43,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"pub fn propagate(w: &Array2<f32>, b: &f32, X: &Array2<f32>, Y: &Array2<f32>) -> (Array2<f32>, f32, f32) { ","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: arguments to this function are incorrect\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/test_helper.rs:33:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (dw, db, cost) = propagate(&w, &b, &X, &Y);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: expected an array with a fixed size of 2 elements, found one with 3 elements\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/test_helper.rs:33:36\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (dw, db, cost) = propagate(&w, &b, &X, &Y);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected reference `&ArrayBase<OwnedRepr<\u001b[0m\u001b[0m\u001b[1m\u001b[35mf32\u001b[0m\u001b[0m>, Dim<\u001b[0m\u001b[0m\u001b[1m\u001b[35m[usize; 2]\u001b[0m\u001b[0m>>`\u001b[0m\n\u001b[0m              found reference `&ArrayBase<OwnedRepr<\u001b[0m\u001b[0m\u001b[1m\u001b[35m{float}\u001b[0m\u001b[0m>, Dim<\u001b[0m\u001b[0m\u001b[1m\u001b[35m[usize; 3]\u001b[0m\u001b[0m>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: expected an array with a fixed size of 2 elements, found one with 3 elements\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/test_helper.rs:33:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (dw, db, cost) = propagate(&w, &b, &X, &Y);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected reference `&ArrayBase<OwnedRepr<\u001b[0m\u001b[0m\u001b[1m\u001b[35mf32\u001b[0m\u001b[0m>, Dim<\u001b[0m\u001b[0m\u001b[1m\u001b[35m[usize; 2]\u001b[0m\u001b[0m>>`\u001b[0m\n\u001b[0m              found reference `&ArrayBase<OwnedRepr<\u001b[0m\u001b[0m\u001b[1m\u001b[35m{float}\u001b[0m\u001b[0m>, Dim<\u001b[0m\u001b[0m\u001b[1m\u001b[35m[usize; 3]\u001b[0m\u001b[0m>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: expected an array with a fixed size of 2 elements, found one with 3 elements\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/test_helper.rs:33:48\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (dw, db, cost) = propagate(&w, &b, &X, &Y);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected reference `&ArrayBase<OwnedRepr<\u001b[0m\u001b[0m\u001b[1m\u001b[35mf32\u001b[0m\u001b[0m>, Dim<\u001b[0m\u001b[0m\u001b[1m\u001b[35m[usize; 2]\u001b[0m\u001b[0m>>`\u001b[0m\n\u001b[0m              found reference `&ArrayBase<OwnedRepr<\u001b[0m\u001b[0m\u001b[1m\u001b[35m{float}\u001b[0m\u001b[0m>, Dim<\u001b[0m\u001b[0m\u001b[1m\u001b[35m[usize; 3]\u001b[0m\u001b[0m>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/workspaces/handwriting_recognition_logistic_regression/src/helper.rs:43:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn propagate(w: &Array2<f32>, b: &f32, X: &Array2<f32>, Y: &Array2<f32>) -> (Array2<f32>, f32, f32) { \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 1 previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 1 previous error\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}
